data$date_symptoms = as.Date(data$date_symptoms,
format = "%d-%m-%Y")
data$entry_date = as.Date(data$entry_date,
format = "%d-%m-%Y")
data$entry_date - data$date_symptoms
x = data$date_symptoms
hist(x)
x = data$entry_date - data$date_symptoms
hist(x)
x
x = as.numeric(x)
hist(x)
summary(x)
data$date_died
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 1, 0))
data$death
sum(data$death)
fix(data)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,8)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
sum(data$death)
sum(data$death)/nrow(data)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
data$icu = NULL
data$intubed = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,8)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
data$death
sum(data$death) / rrow(data)
sum(data$death) / nrow(data)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
data$icu = NULL
data$intubed = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,8)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
data$date_symptoms = as.Date(data$date_symptoms,
format = "%d-%m-%Y")
data$entry_date = as.Date(data$entry_date,
format = "%d-%m-%Y")
data$symptoms_to_entry = data$entry_date - data$date_symptoms #time from symptoms to entry
data$date_died = NULL
data$date_symptoms = NULL
data$entry_date = NULL
nrow(data)
fix(data)
typeof(data)
x = data
fix(x)
x = as.data.frame(data)
fix(x)
data
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
data$icu = NULL
data$intubed = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,8)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
data$date_symptoms = as.Date(data$date_symptoms,
format = "%d-%m-%Y")
data$entry_date = as.Date(data$entry_date,
format = "%d-%m-%Y")
data$symptoms_to_entry = as.numeric(data$entry_date - data$date_symptoms) #time from symptoms to entry
data$date_died = NULL
data$date_symptoms = NULL
data$entry_date = NULL
head(data)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
data$icu = NULL
data$intubed = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,8)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
subset
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
data$icu = NULL
data$intubed = NULL
head(data)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
data$icu = NULL
data$intubed = NULL
subset = data[ ,c(3,4,5,7)]
data = apply(data[ , -c(3,4,5,7)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,7)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
data$date_symptoms = as.Date(data$date_symptoms,
format = "%d-%m-%Y")
data$entry_date = as.Date(data$entry_date,
format = "%d-%m-%Y")
data$symptoms_to_entry = as.numeric(data$entry_date - data$date_symptoms) #time from symptoms to entry
data$date_died = NULL
data$date_symptoms = NULL
data$entry_date = NULL
head(data)
unique(age)
unique(data$age)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
x = data$icu
y = data$intubed
z = cbind(x,y)
fix(z)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,7)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
data$date_symptoms = as.Date(data$date_symptoms,
format = "%d-%m-%Y")
data$entry_date = as.Date(data$entry_date,
format = "%d-%m-%Y")
data$symptoms_to_entry = as.numeric(data$entry_date - data$date_symptoms) #time from symptoms to entry
data$date_died = NULL
data$date_symptoms = NULL
data$entry_date = NULL
x1 = data$icu
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
head(data)
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,7)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
data$date_symptoms = as.Date(data$date_symptoms,
format = "%d-%m-%Y")
data$entry_date = as.Date(data$entry_date,
format = "%d-%m-%Y")
data$symptoms_to_entry = as.numeric(data$entry_date - data$date_symptoms) #time from symptoms to entry
data$date_died = NULL
data$date_symptoms = NULL
data$entry_date = NULL
library(dplyr)
wd ="C:/Users/nghia/OneDrive/Documents/GitHub/covid19-precondition-analysis"
setwd(wd)
data = as.data.frame(
read.csv("covid.csv")
)
data$id = NULL
data$pregnancy = NULL
data$contact_other_covid = NULL
data$covid_res = NULL
subset = data[ ,c(3,4,5,8)]
data = apply(data[ , -c(3,4,5,8)],
2,
as.numeric)
#this function assign 1 as yes and 0 as no
ident <- function(x){
temp = case_when(
x == 1 ~ 1,
x == 2 ~ 0,
TRUE ~ 100 #100 is the flag for NULL record
)
return(temp)
}
data = as.data.frame(
apply(data[ , -c(3,4,5,8)], 2, ident)
)
data$id = c(1:nrow(data)) #create id
data = cbind(data, subset) #combine data sets
temp = data %>% filter_all(any_vars(. %in% 100)) #select every record with NULL
id = temp$id
data = data[-id, ] #delete record with NULL
data$id = NULL #discard id
#death flag
data = data %>% mutate(
data,
death = ifelse(date_died == "9999-99-99", 0, 1))
data$date_symptoms = as.Date(data$date_symptoms,
format = "%d-%m-%Y")
data$entry_date = as.Date(data$entry_date,
format = "%d-%m-%Y")
data$symptoms_to_entry = as.numeric(data$entry_date - data$date_symptoms) #time from symptoms to entry
data$date_died = NULL
data$date_symptoms = NULL
data$entry_date = NULL
head(data)
plot(data$age, data$death)
data$age
hist(data$age)
x = aggregate(data$death, by = data$age, FUN=sum)
x = aggregate(data$death, by = list(data$age), FUN=sum)
x
plot(x$Group.1, x$x)
plotly::plot_ly(x = x$Group.1, y = x$x, type = "bar")
hist(data$age)
death_age = aggregate(data$death, by = list(data$age), FUN = sum)
death_age
death_age = aggregate(data$death,
data$age
by = list(data$age),
FUN = sum)
death_age = aggregate(data$death,
data$age,
by = list(data$age),
FUN = sum)
death_age
death_age = aggregate(data$death,
by = list(data$age),
FUN = sum)
death_age
rep(1, times = 100)
data$count = rep(1, times = nrow(data))
infected_age = aggregate(data$age,
by = list(data$age))
data$count = rep(1, times = nrow(data))
infected_age = aggregate(data$age,
by = list(data$age),
FUN = sum)
death_age = aggregate(data$death,
by = list(data$age),
FUN = sum)
infected_age
death_rate = death_age$x/infected_age$x
death_rate
plot(x = infected_age$Group.1, y = death_rate)
infected_age = aggregate(data$count,
by = list(data$age),
FUN = sum)
death_age = aggregate(data$death,
by = list(data$age),
FUN = sum)
death_rate = death_age$x/infected_age$x
death_rate
plot(x = infected_age$Group.1, y = death_rate)
plot(x = infected_age$Group.1, y = death_rate, type = "l")
infected_age
